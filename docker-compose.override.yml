services:
  webserver:
    networks:
      - feversnet

  scheduler:
    networks:
      - feversnet

  triggerer:
    networks:
      - feversnet

  minio:
    image: minio/minio
    container_name: minio
    hostname: minio
    restart: always
    volumes:
      - ./include/storage/data/minio:/data
    ports:
      - 9000:9000
      - 9001:9001
    env_file:
      - ./.env
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - feversnet

  postgres-db-setup:
    image: etl-currecy/db-setup
    build:
      context: ./postgres-db-setup
      dockerfile: Dockerfile
    command: sh -c ".venv/bin/python -m alembic upgrade head && tail -f /dev/null"
    env_file:
      - ./.env
    volumes:
      - ./postgres_db_setup:/app
      - ./include/shared_models:/app/shared_models
    container_name: postgres-db-setup
    depends_on:
      - etl-currency-postgres-db
    networks:
      - feversnet

  etl-currency-postgres-db:
    image: postgres
    restart: always
    container_name: etl-currency-postgres-db
    hostname: etl-currency-postgres-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: currencies
    volumes:
      - postgres_db_data:/var/lib/postgresql/data
    healthcheck:
      test: /usr/bin/pg_isready -U postgres -d currencies
      interval: 10s
      timeout: 5s
      retries: 3
    ports:
      - "5435:5432"
    networks:
      - feversnet

volumes:
  postgres_db_setup:
  include_shared_models:
  postgres_db_data:

networks:
  feversnet:
    driver: bridge
    